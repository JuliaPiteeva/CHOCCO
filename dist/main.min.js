let myMap;

const init = () => {
  myMap = new ymaps.Map("map", {
    center: [55.74, 37.61],
    zoom: 13,
    controls: []
  });

  const coords = [
    [55.74, 37.61],
    [55.77, 37.61],
    [55.76, 37.61],
    [55.75, 37.61]
  ];
  const myCollection = new ymaps.GeoObjectCollection(
    {},
    {
      draggable: false, // и их можно перемещать
      iconLayout: "default#image",
      iconImageHref: "./img/mark.png",
      iconImageSize: [30, 42],
      iconImageOffset: [-3, -42],
      zoom: 10
    }
  );
  coords.forEach(coord => {
    myCollection.add(new ymaps.Placemark(coord));
  });

  myMap.geoObjects.add(myCollection);
  myMap.behaviors.disable("scrollZoom");
};
ymaps.ready(init);

// let player;
// const playerContainer = $(".player"); //контейнер для плеера

// let eventsInit = () => {
//   $(".player__start").click((e) => {
//     e.preventDefault();

//     if (playerContainer.hasClass("paused")) {
//       player.pauseVideo();
//     } else {
//       player.playVideo();
//     }
//   });

//   $(".player__playback").click((e) => {
//     //слушаем событие по бару
//     const bar = $(e.currentTarget); // сохраняем весь бар в переменную
//     const clickedPosition = e.originalEvent.layerX; // по клику на этот бар, мы можем получить значение, где произошел клик, относительно того объекта, на котором это событие производилось
//     const newButtonPositionPercent = (clickedPosition / bar.width()) * 100; //ищем количество процентов
//     const newplayBackpositionSec =
//       (player.getDuration() / 100) * newButtonPositionPercent; // количество секунд, до которых нужно перемотать
//     //сдвинем кнопку
//     $(".player__playback-button").css({
//       left: `${ewButtonPositionPercent}%`,
//     });

//     player.seekTo(newplayBackpositionSec); //
//   });

//   $(".player__splash").click((e) => {
//     player.playVideo();
//   });
// };

// const formatTime = (timeSec) => {
//   const roundTime = Math.round(timeSec);
//   const minutes = addZero(Math.floor(roundTime / 60));
//   const seconds = addZero(roundTime % 60);

//   function addZero(num) {
//     return num < 10 ? `0${num}` : num;
//   }

//   return `${minutes}: ${seconds}`;
// };

// const onPlayerReady = () => {
//   //продолжительность видео
//   let interval;
//   const durationSec = player.getDuration();

//   $(".player__duration-estimate").text(formatTime(durationSec));

//   if (typeof interval != "undefined") {
//     clearInterval(interval);
//   }

//   interval = setInterval(() => {
//     //каждую секунду спрашиваем количество времени, которое прошло с начала
//     const completeSec = player.getCurrentTime();
//     const completedPercent = (completeSec / durationSec) * 100; //время , прошедщее с запуска в %

//     $(".player__playback-button").css({
//       left: `${completedPercent}%`,
//     }); //сдвинем блок

//     $(".player__duration-completed").text(formatTime(completeSec)); //выводим время в блок, предварительно форматируя
//   }, 1000);
// };

// const onPlayerStateChange = (event) => {
//   /*
//     -1 (воспроизведение видео не начато)
//     0 (воспроизведение видео завершено)
//     1 (воспроизведение)
//     2 (пауза)
//     3 (буферизация)
//     5 (видео подают реплики).
//     */

//   switch (
//     event.data //централизация событий- нажатие на скрин и на кнопку
//   ) {
//     case 1:
//       playerContainer.addClass("active");
//       playerContainer.addClass("paused"); //меняем стиль иконки
//       break;

//     case 2:
//       playerContainer.removeClass("active");
//       playerContainer.removeClass("paused"); //меняем стиль иконки
//       break;
//   }
// };

// function onYouTubeIframeAPIReady() {
//   player = new YT.Player("playerID", {
//     height: "405",
//     width: "660",
//     videoId: "M7lc1UVf-VE",
//     events: {
//       onReady: onPlayerReady, //видео загружено полностью
//       onStateChange: onPlayerStateChange, //событие активируется при изменении состояния плеера
//     },
//     playerVars: {
//       controls: 0,
//       disablekb: 0,
//       showinfo: 0,
//       rel: 0,
//       autoplay: 0,
//       modestbranding: 0,
//     },
//   });
// }

// eventsInit();

/////////////////// Секция "hero" открытие и закрытие полноэкранного меню//////////////////
const hamburgerOpen = document.querySelector(".hamburger-link");
var hamburgerMenu = document.querySelector(".hamburger-menu");
hamburgerOpen.addEventListener("click", function (e) {
  e.preventDefault();
  hamburgerMenu.style.display = "block";
});
const hamburgerClose = document.querySelector(".svg-container");
hamburgerMenu = document.querySelector(".hamburger-menu");
hamburgerClose.addEventListener("click", function () {
  hamburgerMenu.style.display = "none";
});

///////////////// Секция "slider" , кеопка состава батончика//////////////////////////

const nutritionLinks = document.querySelectorAll(".bar__nutrition-link");
const nutritionShows = document.querySelectorAll(".nutrition");

for (var i = 0; i < nutritionLinks.length; i++) {
  nutritionLinks[i].addEventListener("click", function (e) {
    e.preventDefault();
    this.nextElementSibling.classList.toggle("nutrition--active");
  });
}

///////////////////////// Секция "menu" аккордеон/////////////////////////////////

const menulinkArray = document.getElementsByClassName("menu__link");
const menuContentArray = document.getElementsByClassName("menu__desc-content");
const closeBtn = document.getElementsByClassName("close");

for (var i = 0; i < menulinkArray.length; i++) {
  menulinkArray[i].addEventListener("click", function (e) {
    e.preventDefault();
    const thisActive = this.nextElementSibling;
    for (var k = 0; k < menuContentArray.length; k++) {
      if (
        k != i &&
        !thisActive.classList.contains("menu__desc-content--active")
      ) {
        menuContentArray[k].classList.remove("menu__desc-content--active");
      }
    }
    if (!thisActive.classList.contains("menu__desc-content--active")) {
      thisActive.classList.add("menu__desc-content--active");
    } else {
      thisActive.classList.remove("menu__desc-content--active");
    }
  });
}

var menuContentCloseArray = document.getElementsByClassName("close");
for (var i = 0; i < menuContentCloseArray.length; i++) {
  menuContentCloseArray[i].addEventListener("click", function (e) {
    var closeDesc = this.parentNode;
    var closeDesc2 = closeDesc.parentNode;
    closeDesc2.classList.remove("menu__desc-content--active");
  });
}
////////////////////////Секция "team" аккордеон///////////////////////////
const teamLinkArray = document.getElementsByClassName("accordeon__title");
const accordeonIitem = document.getElementsByClassName("accordeon__item");

for (var i = 0; i < teamLinkArray.length; i++) {
  teamLinkArray[i].addEventListener("click", function (e) {
    e.preventDefault();
    const thisActive = this.parentNode;
    for (var k = 0; k < accordeonIitem.length; k++) {
      if (k != i && !thisActive.classList.contains("accordeon--visible")) {
        accordeonIitem[k].classList.remove("accordeon--visible");
      }
    }
    if (!thisActive.classList.contains("accordeon--visible")) {
      thisActive.classList.add("accordeon--visible");
    } else {
      thisActive.classList.remove("accordeon--visible");
    }
  });
}

///////////////////////////////Отправка данных из формы на сервер///////////////////////////////////////

const myForm = document.querySelector("#form");
const send = document.querySelector(".button");
const body = document.querySelector("body");

send.addEventListener("click", function (event) {
  event.preventDefault();
  if (validateForm(myForm)) {
    //создаем объект с введенными данными
    var formData = new FormData();
    formData.append("name", myForm.elements.phone.value);
    formData.append("phone", myForm.elements.phone.value);
    formData.append("comment", myForm.elements.comment.value);
    formData.append("to", "a@a.a");

    const xhr = new XMLHttpRequest();
    xhr.responseType = "json"; //будем ожидать от сервера, данные в формате json
    xhr.open("POST", "https://webdev-api.loftschool.com/sendmail/fail"); // метод отправки, путь до сервера
    xhr.send(formData); // - метод, выполняет ф-ю отправки указанных данных. Переводим наш объект в строку и отправляем
    xhr.addEventListener("load", () => {
      if (xhr.response.status) {
        overlay.open();
        body.classList.add("lock");
        overlay.setContent("Сообщение отправлено");

        myForm.elements.name.value = "";
        myForm.elements.phone.value = "";
        myForm.elements.comment.value = "";
      } else {
        overlay.open();
        body.classList.add("lock");
        overlay.setContent(xhr.response.message);
      }
    });
  }
});

function validateForm(form) {
  let valid = true;

  if (!validateField(form.elements.name)) {
    valid = false;
  }
  if (!validateField(form.elements.phone)) {
    valid = false;
  }
  if (!validateField(form.elements.comment)) {
    valid = false;
  }
  return valid;
}
function validateField(field) {
  field.nextElementSibling.textContent = field.validationMessage;
  return field.checkValidity();
}

/////////////////////////////////////OVERLAY//////////////////////////////////////////

const template = document.querySelector("#overlayTemplate").innerHTML;
const overlay = createOverlay(template);
overlay.setContent("Сообщение отправлено");

function createOverlay(template) {
  const fragment = document.createElement("div"); //создаем временный контейнер

  fragment.innerHTML = template; //Помещаем во временный контейнер шаблон

  const overlayElement = fragment.querySelector(".overlay");
  const contentElement = fragment.querySelector(".content");
  const closeElement = fragment.querySelector(".overlay-close");

  overlayElement.addEventListener("click", (e) => {
    if (e.target === overlayElement) {
      closeElement.click(); //эмулируем нажатие на кнопку закрыть
    }
  });

  closeElement.addEventListener("click", (e) => {
    e.preventDefault();
    document.body.removeChild(overlayElement);
    body.classList.remove("lock");
  });

  return {
    open() {
      document.body.appendChild(overlayElement);
    },
    close() {
      closeElement.click();
    },
    setContent(content) {
      contentElement.innerHTML = content;
    },
  };
}
///////////////////////reviews/////////////////////////////////////////////////////

const leftIcon = document.querySelector("#left");
const middleIcon = document.querySelector("#middle");
const rightIcon = document.querySelector("#right");
const reviewsItems = document.querySelectorAll(".reviews__item");
const links = document.querySelectorAll(".reviews__link");

var slideIndex = 1;

leftIcon.addEventListener("click", function (e) {
  e.preventDefault();
  slideIndex = 0;
  showSlides(slideIndex);
});

middleIcon.addEventListener("click", function (e) {
  e.preventDefault();
  slideIndex = 1;
  showSlides(slideIndex);
});

rightIcon.addEventListener("click", function (e) {
  e.preventDefault();
  slideIndex = 2;
  showSlides(slideIndex);
});

function showSlides(index) {
  for (var i = 0; i < reviewsItems.length; i++) {
    if (
      reviewsItems[i].classList.contains("reviews__item--active") &&
      links[i].classList.contains("reviews__link--active")
    ) {
      reviewsItems[i].classList.remove("reviews__item--active");
      links[i].classList.remove("reviews__link--active");
    }
    reviewsItems[index].classList.add("reviews__item--active");
    links[index].classList.add("reviews__link--active");
  }
}
var k = 0;
var timerId = setInterval(function () {
  showSlides(k);
  k++;
  if (k === 3) {
    k = 0;
  }
}, 3000);

// //1.Избавляемся от обычного скролла -  wrapper  - растягиваем тоолько на 100% высоты окна,hidden. maincontent - высоту 100%б его и будем двигать.
// //2.Комплексную задачу - разбиваем на простые подзадачи
// //3. Определяем, вверх скролим или вниз
// //4.Определить, какая секция отображена. Текущая секция - наличие класса active
// //5.Фукнция -которая будет определять куда скролить.
// //6.Необходимо смещать активный класс
// //7.Не можем скролить к несуществующим секциям.
// //8. Перед скролом проверим, есть ли наша секция
// //9. Тачпад генерирует много событий. Частые события.
// //10. mobbile-detect js - библиотека. определить устройство и применить методы

// const sections = $(".section");
// const display = $(".maincontent");
// let inScroll = false;
// const md = new MobileDetect(window.navigator.userAgent);
// const isMobile = md.mobile();

// const countSectionPosition = (sectionEq) => {
//   const position = sectionEq * -100;
//   if (isNaN(position))
//     console.error("Не верное значение в функции countSectionPosition");
//   return position;
// };

// const resetActiveClass = (item, eq) => {
//   item.eq(eq).addClass("active").siblings().removeClass("active");
// };

// const performTransition = (sectionEq) => {
//   if (inScroll) return;
//   inScroll = true;
//   resetActiveClass(sections, sectionEq);
//   resetActiveClass($(".point-nav__item"), sectionEq);
//   display.css({
//     transform: `translateY(${countSectionPosition(sectionEq)}%)`,
//   });

//   const transformEnded = display.on("transformend").length;
//   if (transformEnded) {
//     inScroll = false;
//   }
// };

// const scroller = () => {
//   const activeSection = sections.filter(".active");
//   const nextSection = activeSection.next();
//   const prevSection = activeSection.prev();

//   return {
//     //объект с методами
//     next() {
//       if (nextSection.length) {
//         //если есть секция, скроллим к ней
//         performTransition(nextSection.index());
//       }
//     },
//     prev() {
//       if (prevSection.length) {
//         performTransition(prevSection.index());
//       }
//     },
//   };
// };

// $(window).on("wheel", (e) => {
//   const deltaY = e.originalEvent.deltaY;
//   const windowScroller = scroller();

//   if (deltaY > 0) {
//     windowScroller.next();
//   }

//   if (deltaY < 0) {
//     windowScroller.prev();
//   }
// });

// //////////////////////////////////// при нажатии на клавиши вверх/вниз/////////////////////////
// //Убедимся, что нажатие кнопок произошло body
// //Определяем блок с произошедшим событием. target-возвращает блок, на котором произошло событие, смотреть регистр
// $(document).on("keydown", (e) => {
//   const windowScroller = scroller();
//   const tagName = e.target.tagName.toLowerCase();
//   const userTypingInInputs = tagName === "input" || tagName === "textarea";

//   if (userTypingInInputs) return;
//   switch (e.keyCode) {
//     case 38:
//       windowScroller.prev();
//       break;
//     case 40:
//       windowScroller.next();
//       break;
//   }
// });

// //////////////////////////////////переход по ссылкам и точкам////////////////////////
// //Разные кнопки, по которым происходят одни и теже действия. Заводим дата атрибут data-scroll-to, с айди или классом.
// //e.currentTarget значение элемента, на который событие было навешано
// // attr берем номер секци куда скролить
// $("[data-scroll-to]").on("click", (e) => {
//   e.preventDefault();
//   const $this = $(e.currentTarget);
//   const target = $this.attr("data-scroll-to");
//   performTransition(target);
// });
// //touchstart? touchmove, touchhend - можно реализовать перетягивание  drak
// // реализация с помощью библиотеки  touchswipe
// //добавляем условие проверки устройства
// if (isMobile) {
//   $("body").swipe({
//     swipe: (event, direction) => {
//       let scrollDirection;
//       const windowScroller = scroller();

//       if (direction === "up") scrollDirection = "next";
//       if (direction === "down") scrollDirection = "prev";

//       windowScroller[scrollDirection]();
//     },
//   });
// }
// // код не должен расти вправо, понятные имена переменных, не создавать длинных усовий, можно вынесли условие в переменную
// //функция должна выполнять одну операцию
// //проверять входные параметры, писать подсказки
// //внутри функции приводить аргументы к нужным типам данных
// //не доускать магических чисел
// //следить за дубликацией кода

$(function () {
  var moveSlide = function (container, slideNum) {
    var sliderItems = container.find(".slider__item"),
      activeSlide = sliderItems.filter(".active"),
      reqSlide = sliderItems.eq(slideNum),
      reqIndex = reqSlide.index(),
      sliderList = container.find(".slider__list"), //что будем двигать
      duration = 900; //время анимации

    if (reqSlide.length) {
      sliderList.animate(
        {
          left: -reqIndex * 100 + "%",
        },
        duration,
        function () {
          activeSlide.removeClass("active");
          reqSlide.addClass("active");
          console.log(reqSlide.index());
        }
      );
    }
  };

  //запуск по событию ready
  $(".slider-controls__link").on("click", function (e) {
    e.preventDefault();

    var $this = $(this),
      container = $this.closest(".slider"),
      sliderItems = container.find(".slider__item"),
      activeSlide = sliderItems.filter(".active"),
      existedSlide,
      edgeSlide,
      reqSlide;

    if ($this.hasClass("right__link")) {
      existedSlide = activeSlide.next();
      edgeSlide = sliderItems.first();
    }

    if ($this.hasClass("left__link")) {
      existedSlide = activeSlide.prev();
      edgeSlide = sliderItems.last();
    }
    reqSlide = existedSlide.length ? existedSlide.index() : edgeSlide.index();
    moveSlide(container, reqSlide);
  });
});

///////
//$(".slider-controls__link").on("click", function (e) {
//   e.preventDefault();

//   var $this = $(this),
//     container = $this.closest(".slider"),
//     sliderItems = container.find(".slider__item"),
//     activeSlide = sliderItems.filter(".active"),
//     nextItem = activeSlide.next(),
//     prevItem = activeSlide.prev();

//   if ($this.hasClass("right__link")) {
//     if (nextItem.length) {
//       moveSlide(container, nextItem.index());
//     } else {
//       moveSlide(container, sliderItems.first().index());
//     }
//   } else {
//     if (prevItem.length) {
//       moveSlide(container, prevItem.index());
//     } else {
//       moveSlide(container, sliderItems.last().index());
//     }
//   }
// });

//Получим досутп к свойствам виде
let player;

let eventsInit = () => {
  var playerVideo = $("#videoID");

  const playerContainer = $(".player");

  $(".player__start").click((e) => {
    e.preventDefault();
    playerVideo.play();

    //изменить классы, запустить ф-ю запуска плеера
    playerContainer.addClass("paused");
    playerContainer.addClass("active");
    const btn = $(e.currentTarget); //сохраним в переменную кнопку, на которой произошло событие
  });
};

eventsInit();

//# sourceMappingURL=data:application/json;charset=utf8;base64,
